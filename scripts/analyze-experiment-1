#!/usr/bin/env python3
'''
Generate figures summarizing the results of experiment 1.
'''
from json import loads
from os import makedirs

import matplotlib.pyplot as plt
import seaborn as sbn

################################################################################
# Load the experiment result.
################################################################################

with open('nets/experiment-1.json', 'r') as f:
    log = loads(f.read())

################################################################################
# Create a directory in which to store figures.
################################################################################

makedirs('figures/experiment-1/', exist_ok=True)

################################################################################
# Generate figures.
################################################################################

sr_acc = [log['sr']['acc_ts']]
sr_moc = [log['sr']['moc_ts']]
ds_acc = [entry['net']['acc_ts'] for entry in log['ds']]
ds_moc = [entry['net']['moc_ts'] for entry in log['ds']]
cr_acc = [entry['net']['acc_ts'] for entry in log['cr']]
cr_moc = [entry['net']['moc_ts'] for entry in log['cr']]

plt.rc('text', usetex=True)
plt.figure(figsize=(4, 3))
sbn.set_style('ticks')
plt.xlabel('Mean Op Count')
plt.ticklabel_format(axis='x', style='sci', scilimits=(0, 0))
plt.ylabel('Accuracy')
plt.scatter(sr_moc, sr_acc, color='r', label='Static routing')
plt.scatter(ds_moc, ds_acc, color='g',
            label='Dynamic routing -- decision smoothing')
plt.scatter(cr_moc, cr_acc, color='b',
            label='Dynamic routing -- cost regression')
plt.legend(loc='lower right', fontsize=8)
sbn.despine()
plt.tight_layout()
plt.savefig('figures/experiment-1/sat.pdf')
