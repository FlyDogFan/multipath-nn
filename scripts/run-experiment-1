#!/usr/bin/env python3
'''
Compare the accuracy and efficiency of statically-routed networks and
dynamically-routed networks (trained via decision smoothing).
'''
from json import dumps
from os import makedirs

from lib.data import Dataset
from lib.nets import DSRouting, LogReg, Net, ReConvMP
from lib.training import train

################################################################################
# Load data.
################################################################################

dataset = Dataset('data/mnist.mat')
x0_shape = dataset.x0_shape
y_shape = dataset.y_shape
n_cls = y_shape[0]

################################################################################
# Allocate a log for the experiment results.
################################################################################

log = {'sr': None, 'dr': []}

################################################################################
# Train a statically-routed network.
################################################################################

print('\n —— Training a statically-routed network... ——\n')

sr_net = Net(x0_shape, y_shape,
    ReConvMP(32, 2, 5, 0, 1,
        ReConvMP(64, 2, 5, 0, 1,
            ReConvMP(128, 2, 5, 0, 1, LogReg(n_cls)))))
log['sr'] = train(sr_net, dataset, 'Static Routing', n_epochs=10)

################################################################################
# Train dynamically-routed networks.
################################################################################

k_cpts = [0] + [2**i * 1e-10 for i in range(15)]
ϵ = 0.1

print('\n —— Training dynamically-routed networks... ——\n')

for k_cpt in k_cpts:
    net = Net(x0_shape, y_shape, DSRouting(ϵ, LogReg(n_cls),
        ReConvMP(32, 2, 5, k_cpt, 1, DSRouting(ϵ, LogReg(n_cls),
            ReConvMP(64, 2, 5, k_cpt, 1, DSRouting(ϵ, LogReg(n_cls),
                ReConvMP(128, 2, 5, k_cpt, 1, LogReg(n_cls))))))))
    name = 'Dynamic Routing (k_cpt=%.1e)' % k_cpt
    desc = train(net, dataset, name, n_epochs=10)
    log['dr'].append({'k_cpt': k_cpt, 'net': desc})

################################################################################
# Save the results.
################################################################################

makedirs('nets/', exist_ok=True)
with open('nets/experiment-1.json', 'w') as f:
    f.write(dumps(log, sort_keys=True, indent=2, separators=(',', ': ')))

print('\n —— Saved the results as `nets/experiment-1.json`. ——\n')
