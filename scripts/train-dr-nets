#!/usr/bin/env python3
'''
Train dynamically-routed networks
'''
from os import makedirs
from os.path import isfile

import numpy as np
import tensorflow as tf

from lib.data import Dataset
from lib.nets import ds_chain, k_cpts
from lib.training import train

################################################################################
# Load and preprocess data.
################################################################################

m_cls = [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
w_cls = np.transpose([np.equal(m_cls, i) for i in range(2)])

dataset = Dataset('data/cifar-10.mat', n_vl=1280)
dataset.y_tr = np.dot(dataset.y_tr, w_cls)
dataset.y_ts = np.dot(dataset.y_ts, w_cls)
dataset.y_vl = np.dot(dataset.y_vl, w_cls)

################################################################################
# Define training hyperparameters.
################################################################################

n_epochs = 50
λ_learn = 0.01
μ_learn = 0.9

τ0 = 100
t_anneal = 5

################################################################################
# Ensure that the output directory exists.
################################################################################

makedirs('nets/ds-chains', exist_ok=True)

################################################################################
# Train dynamically-routed networks.
################################################################################

for i, k_cpt in enumerate(k_cpts):
    with tf.Graph().as_default():
        optimizer = tf.train.MomentumOptimizer(λ_learn, μ_learn)
        net = ds_chain(optimizer)
        train(net, dataset, n_epochs=n_epochs,
              name=('DSNet (routing="dyn", k_cpt=%g)' % k_cpt),
              hypers=(lambda t: {
                  net.hypers.τ: τ0 / 2**(t / t_anneal),
                  net.hypers.k_cpt: k_cpt}))
        net.write('nets/ds-chains/net%i.tfn' % i)
