#!/usr/bin/env python3
import numpy as np
import tensorflow as tf

from lib.data import Dataset
from lib.training import train
from lib.nets import (
    CRRouting, DSRouting, LogReg, Net, ReConv, ReConvMP, ReLin,
    SmartCRRouting, SmartDSRouting)

################################################################################
# Load data.
################################################################################

dataset = Dataset('data/mnist.mat')
x0_shape = dataset.x0_shape
y_shape = dataset.y_shape
n_cls = y_shape[0]

################################################################################
# Train a network.
################################################################################

k_cpt = 0e-7
k_l2 = 1e-5

net = Net(x0_shape, y_shape, CRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
    ReConvMP(32, 2, 5, k_cpt, k_l2, CRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
        ReConvMP(64, 2, 5, k_cpt, k_l2, CRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
            ReLin(128, k_cpt, k_l2, LogReg(n_cls, k_l2))))))))

train(net, dataset)

# train(Net(x0_shape, y_shape,
#     ReConvMP(32, 2, 5, k_cpt, k_l2,
#         ReConvMP(64, 2, 5, k_cpt, k_l2,
#             ReLin(128, k_cpt, k_l2, LogReg(n_cls, k_l2))))))

# train(Net(x0_shape, y_shape, DSRouting(0.5, LogReg(n_cls, k_l2),
#     ReConvMP(32, 2, 5, k_cpt, k_l2, DSRouting(0.5, LogReg(n_cls, k_l2),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, DSRouting(0.5, LogReg(n_cls, k_l2),
#             ReLin(128, k_cpt, k_l2, LogReg(n_cls, 0)))))))))

# train(Net(x0_shape, y_shape, CRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#     ReConvMP(32, 2, 5, k_cpt, k_l2, CRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, CRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#             ReLin(128, k_cpt, k_l2, LogReg(n_cls, k_l2)))))))))

# train(Net(x0_shape, y_shape, SmartCRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#     ReConvMP(32, 2, 5, k_cpt, k_l2, SmartCRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, SmartCRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#             ReLin(128, k_cpt, k_l2, LogReg(n_cls, k_l2)))))))))

# train(Net(x0_shape, y_shape, CRRouting(0.1, 0.5, LogReg(n_cls, 0),
#     ReConvMP(32, 2, 5, k_cpt, 0, CRRouting(0.1, 0.5, LogReg(n_cls, 0),
#         ReConvMP(64, 2, 5, k_cpt, 0, LogReg(n_cls, 0)),
#         ReConvMP(64, 2, 5, k_cpt, 0, LogReg(n_cls, 0)))),
#     ReConvMP(32, 2, 5, k_cpt, 0, CRRouting(0.1, 0.5, LogReg(n_cls, 0),
#         ReConvMP(64, 2, 5, k_cpt, 0, LogReg(n_cls, 0)),
#         ReConvMP(64, 2, 5, k_cpt, 0, LogReg(n_cls, 0)))))))

# train(Net(x0_shape, y_shape, SmartCRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#     ReConvMP(32, 2, 5, k_cpt, k_l2, SmartCRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, LogReg(n_cls, k_l2)),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, LogReg(n_cls, k_l2)))),
#     ReConvMP(32, 2, 5, k_cpt, k_l2, SmartCRRouting(0.1, 0.5, LogReg(n_cls, k_l2),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, LogReg(n_cls, k_l2)),
#         ReConvMP(64, 2, 5, k_cpt, k_l2, LogReg(n_cls, k_l2)))))))
